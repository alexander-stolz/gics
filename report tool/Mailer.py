import smtplib
from email.mime.text import MIMEText
from email.MIMEMultipart import MIMEMultipart
from email.MIMEImage import MIMEImage
import getpass
from sys import argv

addr_from = ""
addr_to = ""
pw = ""
# pw = getpass.getpass("email password > ")

header = """<html><head>
      <style>
      p4 {
        color: black;
        text-align: left;
        font-size: 12px;
        font-family: monospace;
        }
      </style>
      </head><body>"""
# footer = "\n\n\n\nThis report was automatically generated by the GIS control software for the SO-110 B gas ion source, CologneAMS.</body></html>"
footer = "\n\n\n\nThis report was automatically generated by the GIS control software for the SO-110 B gas ion source, CologneAMS.</html>"

# if (not pw):
#     print "skipping mailer\n"


def formatToPlainText(message):
    message = message.replace("</td><td align='center'>", "|")
    message = message.replace("</td><td align='left'>", "|")
    for elem in ["<table>", "</table>", "<td>", "</td>", "<tr>", "</tr>", '<img src="cid:image1">', '<br />', "<td align='center'>", "<td align='left'>", "<table cellspacing='5'>"]:
        message = message.replace(elem, "")
    return message


def send_message(subject, message, to=None, image=None):
    if pw:
        try:
            if not to:
                to = addr_to
            to_list = map(str.strip, to.split(";"))
            to = ", ".join(to_list)
            if (len(to_list) == 1):
                to_list = to

            if type(subject) == list:
                subject = map(str, subject)
                subject = "; ".join(subject)
            else:
                subject = str(subject)
            if type(message) == list:
                message = map(str, message)
                message = "; ".join(message)
            else:
                message = str(message)

            message += footer

            msgRoot = MIMEMultipart('related')
            msgRoot['Subject'] = subject
            msgRoot['From'] = addr_from
            msgRoot['To'] = to
            msgRoot.preamble = 'This is a multi-part message in MIME format.'

            msgAlternative = MIMEMultipart('alternative')
            msgRoot.attach(msgAlternative)

            msgPlain = MIMEText(formatToPlainText(message))
            msgAlternative.attach(msgPlain)

            msgHtml = MIMEText(message, 'html')
            msgAlternative.attach(msgHtml)

            if image:
                with open(image, 'rb') as f:
                    msgImage = MIMEImage(f.read())

                msgImage.add_header('Content-ID', '<image1>')
                msgRoot.attach(msgImage)

            s = smtplib.SMTP("smtp.gmail.com", 587)
            s.ehlo()
            s.starttls()

            print addr_from
            print to
            print to_list

            s.login(addr_from, pw)
            s.sendmail(addr_from, to_list, msgRoot.as_string())
            s.quit()
        except Exception, e:
            print "an error occured while sending mail:\n", e
    else:
        pass


def sendPlainMessage(subject, message, to=None):
    if pw:
        try:
            if not to:
                to = addr_to
            to_list = map(str.strip, to.split(";"))
            to = ", ".join(to_list)
            if (len(to_list) == 1):
                to_list = to

            if type(subject) == list:
                subject = map(str, subject)
                subject = "; ".join(subject)
            else:
                subject = str(subject)
            if type(message) == list:
                message = map(str, message)
                message = "; ".join(message)
            else:
                message = str(message)

            # message = header + message + footer
            message += footer

            # msg = MIMEText(message, "html")
            msg = MIMEText(message)

            msg["Subject"] = subject
            msg["From"] = addr_from
            msg["To"] = to

            s = smtplib.SMTP("smtp.gmail.com", 587)
            s.ehlo()
            s.starttls()

            print addr_from
            print to
            print to_list

            s.login(addr_from, pw)
            s.sendmail(addr_from, to_list, msg.as_string())
            s.quit()
        except Exception, e:
            print "an error occured while sending mail:\n", e
    else:
        pass
